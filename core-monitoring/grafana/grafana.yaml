# Source: grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "8.4.2"
  name: grafana
  namespace: core-monitoring
---
# Allows the sidecars to watch for configmap changes in the core-monitoring namespace
# This could be locked down further to watch specific configmaps
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "8.4.2"
  name: grafana
  namespace: core-monitoring
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "8.4.2"
  name: grafana
  namespace: core-monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: grafana
subjects:
- kind: ServiceAccount
  name: grafana
  namespace: core-monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "8.4.2"
  name: grafana-config-dashboards
  namespace: core-monitoring
data:
  provider.yaml: |-
    apiVersion: 1
    providers:
    - name: 'sidecarProvider'
      orgId: 1
      type: file
      disableDeletion: false
      allowUiUpdates: false
      updateIntervalSeconds: 30
      options:
        foldersFromFilesStructure: true
        path: /tmp/dashboards
---
# Source: grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana
  namespace: core-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "8.4.2"
data:
  grafana.ini: |
    [alerting]
    enabled = false
    [analytics]
    check_for_updates = true
    [auth.generic_oauth]
    allow_sign_up = true
    api_url = https://login.colinmac.dev/oinkfinancial.onmicrosoft.com/b2c_1a_grafana_signup_signin/openid/v2.0/userinfo
    auth_url = https://login.colinmac.dev/oinkfinancial.onmicrosoft.com/b2c_1a_grafana_signup_signin/oauth2/v2.0/authorize
    token_url = https://login.colinmac.dev/oinkfinancial.onmicrosoft.com/b2c_1a_grafana_signup_signin/oauth2/v2.0/token
    client_id = $__file{/run/secret-config/grafana-oauth-clientid}
    client_secret = $__file{/run/secret-config/grafana-oauth-clientsecret}
    enabled = true
    groups_attribute_path = groups
    name = OinkFinancial
    role_attribute_path = role
    role_attribute_strict = false
    email_attribute_path = email
    scopes = f5bae997-ae36-45a4-896c-3a72ed6b5c3e openid profile
    team_ids_attribute_path = teams
    use_pkce = true
    [azure]
    managed_identity_client_id = a6f92948-bf47-4961-89eb-cbd686b94b8a
    managed_identity_enabled = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [security]
    disable_initial_admin_creation = true
    [server]
    domain = monitor.secure.colinmac.dev
    root_url = https://%(domain)s/grafana/
    serve_from_sub_path = true
---
# Source: grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: core-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "8.4.2"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3000
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
---
# Source: grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: core-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "8.4.2"
    colinmac.dev/pci-scope: out-of-scope
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana
        aadpodidbinding: grafana-operator
        colinmac.dev/pci-scope: out-of-scope
      annotations:
        checksum/config: 428bafd10b4c1f627a3208c15ada70f074bc86a96fd56a9e5da96f6e3c05f443
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: 78d884e517ce4c19893fae5b07f8419fcbdd1a36f4c7d8a3053762d143c6bcee
    spec:

      serviceAccountName: grafana
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      enableServiceLinks: true
      containers:
        - name: grafana-sc-plugins
          image: "quay.io/kiwigrid/k8s-sidecar:1.15.6"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
          env:
          - name: METHOD
            value: WATCH
          - name: LABEL
            value: "grafana.colinmac.dev/plugin"
          - name: FOLDER
            value: "/etc/grafana/provisioning/plugins"
          - name: RESOURCE
            value: configmap
          - name: REQ_URL
            value: "http://localhost:3000/api/admin/provisioning/plugins/reload"
          - name: REQ_METHOD
            value: POST
          volumeMounts:
            - name: sc-plugins-volume
              mountPath: "/etc/grafana/provisioning/plugins"
        - name: grafana-sc-dashboard
          image: "quay.io/kiwigrid/k8s-sidecar:1.15.6"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
          env:
          - name: METHOD
            value: WATCH
          - name: LABEL
            value: "grafana.colinmac.dev/dashboard"
          - name: FOLDER
            value: "/tmp/dashboards"
          - name: FOLDER_ANNOTATION
            value: "grafana.colinmac.dev/dashboard-folder"
          - name: RESOURCE
            value: configmap
          volumeMounts:
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
        - name: grafana
          image: "grafana/grafana:8.4.2"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: secrets-store-inline
              mountPath: /run/secret-config
              readOnly: true
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
            - name: sc-dashboard-provider
              mountPath: "/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml"
              subPath: provider.yaml
            - name: sc-dashboard-volume
              mountPath: /tmp/dashboards
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
            - name: GF_DATABASE_URL
              value: sqlite3:///var/lib/grafana/grafana.db?cache=private&mode=rwc&_journal_mode=WAL
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            {}
      volumes:
        - name: config
          configMap:
            name: grafana
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: grafana-config
        - name: datasources
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: grafana-datasources
        - name: storage
          csi:
            driver: file.csi.azure.com
            volumeAttributes:
              shareName: core-monitoring
              folderName: grafana
              secretName: grafana-storage
        - name: sc-plugins-volume
          emptyDir: {}
        - name: sc-dashboard-volume
          emptyDir: {}
        - name: sc-dashboard-provider
          configMap:
            name: grafana-config-dashboards
---
# Source: grafana/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: core-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/version: "8.4.2"
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_ssl_name "grafana.core-monitoring.cluster.local";
    nginx.ingress.kubernetes.io/proxy-ssl-secret: "core-platform/osm-private-nginx-client-cert"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "on"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx-private
  tls:
    - hosts:
      - monitor.secure.colinmac.dev
  rules:
    - host: monitor.secure.colinmac.dev
      http:
        paths:
          - path: /grafana/?(.*)
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
---